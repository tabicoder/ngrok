name: RDP (Ngrok)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Enable RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Create RDP User
        run: |
          $password = [System.Web.Security.Membership]::GeneratePassword(16,3)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_USER=RDP" >> $env:GITHUB_ENV
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV

      - name: Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          .\ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start ngrok tunnel
        run: Start-Process -NoNewWindow -FilePath .\ngrok -ArgumentList "tcp 3389"

      - name: Get ngrok tunnel info
        shell: pwsh
        run: |
          Start-Sleep -Seconds 10
          $response = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          $publicUrl = $response.tunnels[0].public_url -replace "tcp://",""
          echo "NGROK_ADDR=$publicUrl" >> $env:GITHUB_ENV

      - name: Display RDP info
        run: |
          Write-Host "=== RDP INFO ==="
          Write-Host "Address: $env:NGROK_ADDR"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASS"
          Write-Host "================"
          while ($true) {
            Write-Host "[$(Get-Date)] RDP Active..."
            Start-Sleep -Seconds 300
          }
